{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte"
  ],
  "sourcesContent": [
    "<script lang=\"ts\">import { currentSelector, decimals, symbol, targetSelector, url } from \"./config\";\nimport { tweened } from \"svelte/motion\";\nimport { derived } from \"svelte/store\";\nlet cacheBypassIncrement = 0;\nconst parser = new DOMParser();\nfunction getValue(doc, selector) {\n    const element = doc.querySelector(selector);\n    if (element === null)\n        return null;\n    const text = element.textContent;\n    if (text === null)\n        return null;\n    return parseFloat(text);\n}\nconst current = tweened(0, { duration: 1000 });\nconst target = tweened(0, { duration: 500 });\nconst percentage = derived([current, target], (([currentVal, targetVal]) => {\n    if (targetVal === 0)\n        return 0;\n    else\n        return 100 * currentVal / targetVal;\n}));\nfunction updateVariables() {\n    cacheBypassIncrement++;\n    fetch(`https://api.allorigins.win/raw?url=${encodeURIComponent(url)}?${cacheBypassIncrement}=1`, {\n        cache: \"no-store\"\n    }).then(res => res.text())\n        .then(html => parser.parseFromString(html, 'text/html'))\n        .then(doc => ({\n        currentVal: getValue(doc, currentSelector),\n        targetVal: getValue(doc, targetSelector)\n    }))\n        .then(({ currentVal, targetVal }) => {\n        if (currentVal !== null)\n            current.set(currentVal, {});\n        if (targetVal !== null)\n            target.set(targetVal, {});\n    });\n}\nsetInterval(updateVariables, 10 * 1000);\nupdateVariables();\n</script>\n\n<style>\n  :global(body) {\n    padding: 0;\n    overflow: hidden;\n  }\n\n  .barBackground {\n    width: 100vw;\n    height: 50vh;\n    border-radius: 25vh;\n    background-color: #fdffff;\n  }\n\n  .barForeground {\n    height: 50vh;\n    border-radius: 25vh;\n    background-color: #34506a;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .percentage {\n    font-size: 20vh;\n    color: #fdffff;\n  }\n\n  .textBackground {\n    height: 50vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    align-items: flex-start;\n  }\n\n  .totals {\n    font-size: 8vw;\n    color: #fdffff;\n    margin: 4px;\n  }\n</style>\n\n\n\n<div class=\"barBackground\">\n  <div class=\"barForeground\" style={`width: ${$percentage}vw`}>\n    <span class=\"percentage\">\n      {$percentage.toFixed(0)}%\n    </span>\n  </div>\n</div>\n\n<div class=\"textBackground\">\n  <span class=\"totals\">\n    {symbol}{$current.toFixed(decimals)} / {symbol}{$target.toFixed(decimals)} \n  </span>\n</div>"
  ],
  "names": [],
  "mappings": "AA4CU,IAAI,AAAE,CAAC,AACb,OAAO,CAAE,CAAC,CACV,QAAQ,CAAE,MAAM,AAClB,CAAC,AAED,cAAc,eAAC,CAAC,AACd,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,IAAI,CACnB,gBAAgB,CAAE,OAAO,AAC3B,CAAC,AAED,cAAc,eAAC,CAAC,AACd,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,IAAI,CACnB,gBAAgB,CAAE,OAAO,CACzB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,AACrB,CAAC,AAED,WAAW,eAAC,CAAC,AACX,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,OAAO,AAChB,CAAC,AAED,eAAe,eAAC,CAAC,AACf,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,UAAU,AACzB,CAAC,AAED,OAAO,eAAC,CAAC,AACP,SAAS,CAAE,GAAG,CACd,KAAK,CAAE,OAAO,CACd,MAAM,CAAE,GAAG,AACb,CAAC"
}